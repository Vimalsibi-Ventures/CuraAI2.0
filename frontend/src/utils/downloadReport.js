/**
 * Takes the report data and formats it into a clean string
 * for .txt file download.
 * @param {object} reportData - The report object, e.g., { diseases: [...], questions: [...] }
 */
export function downloadReportTxt(reportData) {
  const { diseases, questions } = reportData;

  // 1. Format the content
  let content = "CuraAI - Symptom Analysis Report\n";
  content += "===================================\n\n";
  content += `Generated on: ${new Date().toLocaleString()}\n\n`;

  content += "POSSIBLE CONDITIONS (AI-SUGGESTED):\n";
  content += "--------------------------------------\n";
  if (diseases && diseases.length > 0) {
    diseases.forEach((d) => {
      content += `* ${d}\n`;
    });
  } else {
    content += "No specific conditions identified.\n";
  }

  content += "\n\nQUESTIONS FOR YOUR DOCTOR:\n";
  content += "----------------------------\n";
  if (questions && questions.length > 0) {
    questions.forEach((q) => {
      content += `* ${q}\n`;
    });
  } else {
    content += "No questions generated.\n";
  }

  content += "\n\n===================================\n";
  content += "DISCLAIMER:\n";
  content += "This is not a medical diagnosis. This report is generated by an AI assistant based on the symptoms provided. It is for informational purposes only. Please consult a qualified healthcare professional for an accurate diagnosis and treatment plan.\n";

  // 2. Create a blob and trigger download
  const blob = new Blob([content], { type: 'text/plain;charset=utf-8' });
  const url = URL.createObjectURL(blob);
  const link = document.createElement('a');
  link.href = url;
  link.download = 'CuraAI_Report.txt';

  // 3. Append, click, and remove
  document.body.appendChild(link);
  link.click();
  document.body.removeChild(link);
  URL.revokeObjectURL(url);
}
